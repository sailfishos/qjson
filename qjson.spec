# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.18
# 
# >> macros
# << macros

Name:       qjson
Summary:    Qt based library that maps JSON data to QVariant objects
Version:    0.7.1
Release:    1
Group:      System/Libraries
License:    LGPLv2+
URL:        http://qjson.sourceforge.net
Source0:    %{name}-%{version}.tar.bz2
Source100:  qjson.yaml
Requires(post): /sbin/ldconfig
Requires(postun): /sbin/ldconfig
BuildRequires:  pkgconfig(QtCore)
BuildRequires:  cmake


%description
JSON (JavaScript Object Notation) is a lightweight data-interchange format.
It can represents integer, real number, string, an ordered sequence of value,
and a collection of name/value pairs.

QJson is a qt-based library that maps JSON data to QVariant objects: JSON
arrays will be mapped to QVariantList instances, while JSON objects will be
mapped to QVariantMap.



%package devel
Summary:    Qt based library that maps JSON data to QVariant objects - development files
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}

%description devel
JSON (JavaScript Object Notation) is a lightweight data-interchange format.
It can represents integer, real number, string, an ordered sequence of value,
and a collection of name/value pairs.

QJson is a qt-based library that maps JSON data to QVariant objects: JSON
arrays will be mapped to QVariantList instances, while JSON objects will be
mapped to QVariantMap.

This package contains the QJson development files.



%prep
%setup -q -n %{name}-%{version}

# >> setup
# << setup

%build
# >> build pre
mkdir %{_target_platform}
cd %{_target_platform} && cmake .. \
-DCMAKE_INSTALL_PREFIX="%{_prefix}" \
-DCMAKE_C_COMPILER:FILEPATH="cc" \
-DCMAKE_CXX_COMPILER:FILEPATH="g++" \
-DCMAKE_C_FLAGS="%{optflags}" \
-DCMAKE_CXX_FLAGS="%{optflags}" \
-DCMAKE_SKIP_RPATH=ON \
-DCMAKE_VERBOSE_MAKEFILE=ON \
-DCMAKE_SKIP_RPATH:BOOL=OFF \
-DCMAKE_USE_RELATIVE_PATHS=ON \
-DCMAKE_SHARED_LINKER_FLAGS="-Wl,--as-needed -Wl,--no-undefined" \
-DCMAKE_MODULE_LINKER_FLAGS="-Wl,--as-needed -Wl,--no-undefined" \
-DCMAKE_EXE_LINKER_FLAGS="-Wl,--as-needed -Wl,--no-undefined"
make %{?_smp_mflags}
# << build pre



# >> build post
# << build post
%install
rm -rf %{buildroot}
# >> install pre
# << install pre

# >> install post
make -C %{_target_platform} install DESTDIR=%{buildroot}
# << install post



%post -p /sbin/ldconfig

%postun -p /sbin/ldconfig





%files
%defattr(-,root,root,-)
# >> files
%{_libdir}/*.so.*
# << files


%files devel
%defattr(-,root,root,-)
# >> files devel
%{_includedir}/qjson
%{_libdir}/*.so
%{_libdir}/pkgconfig/*.pc
%{_datadir}/apps/cmake/modules/*.cmake
# << files devel

